2025-06-14 12:57:46 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 249211 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 12:57:46 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 12:57:46 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 12:57:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 12:57:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 12:57:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108 ms. Found 10 JPA repository interfaces.
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 12:57:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-06-14 12:57:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 12:57:48 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 12:57:48 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 12:57:48 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 12:57:48 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2225 ms
2025-06-14 12:57:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 12:57:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31204303
2025-06-14 12:57:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 12:57:49 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://10.113.181.84:5432/foodplus_ordering (PostgreSQL 17.5)
2025-06-14 12:57:49 [main] INFO  o.f.core.internal.command.DbValidate - Successfully validated 15 migrations (execution time 00:00.033s)
2025-06-14 12:57:49 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 1.6.1
2025-06-14 12:57:49 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-06-14 12:57:49 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "1.7.1 - insert dummy data"
2025-06-14 12:57:49 [main] ERROR o.f.core.internal.command.DbMigrate - Migration of schema "public" to version "1.7.1 - insert dummy data" failed! Changes successfully rolled back.
2025-06-14 12:57:49 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "depots" violates foreign key constraint "depots_site_id_fkey"
  Detail: Key (site_id)=(1) is not present in table "sites".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 10
Statement  : Run Flyway with -X option to see the actual statement causing the problem

2025-06-14 12:57:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 12:57:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 12:57:49 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 12:57:49 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 12:57:49 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "depots" violates foreign key constraint "depots_site_id_fkey"
  Detail: Key (site_id)=(1) is not present in table "sites".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 10
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:328)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "depots" violates foreign key constraint "depots_site_id_fkey"
  Detail: Key (site_id)=(1) is not present in table "sites".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 10
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	... 10 common frames omitted
Caused by: org.flywaydb.core.internal.exception.FlywayMigrateException: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "depots" violates foreign key constraint "depots_site_id_fkey"
  Detail: Key (site_id)=(1) is not present in table "sites".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 10
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:399)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$applyMigrations$1(DbMigrate.java:283)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:59)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:282)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:255)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$migrateAll$0(DbMigrate.java:153)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:77)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.lambda$execute$0(PostgreSQLAdvisoryLockTemplate.java:60)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:59)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:60)
	at org.flywaydb.database.postgresql.PostgreSQLConnection.lock(PostgreSQLConnection.java:105)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:164)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:153)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:104)
	at org.flywaydb.core.Flyway.lambda$migrate$1(Flyway.java:247)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:210)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:188)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 17 common frames omitted
Caused by: org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "depots" violates foreign key constraint "depots_site_id_fkey"
  Detail: Key (site_id)=(1) is not present in table "sites".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 10
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.handleException(DefaultSqlScriptExecutor.java:256)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:217)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.execute(DefaultSqlScriptExecutor.java:137)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.executeOnce(SqlMigrationExecutor.java:75)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.lambda$execute$0(SqlMigrationExecutor.java:66)
	at org.flywaydb.core.internal.database.DefaultExecutionStrategy.execute(DefaultExecutionStrategy.java:31)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:65)
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:391)
	... 36 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "depots" violates foreign key constraint "depots_site_id_fkey"
  Detail: Key (site_id)=(1) is not present in table "sites".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.flywaydb.core.internal.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:215)
	at org.flywaydb.core.internal.sqlscript.ParsedSqlStatement.execute(ParsedSqlStatement.java:88)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:212)
	... 42 common frames omitted
2025-06-14 13:06:10 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 255252 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:06:10 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:06:10 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 107 ms. Found 10 JPA repository interfaces.
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:06:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-06-14 13:06:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:06:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:06:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:06:12 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:06:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2308 ms
2025-06-14 13:06:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:06:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@400008bf
2025-06-14 13:06:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:06:13 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://10.113.181.84:5432/foodplus_ordering (PostgreSQL 17.5)
2025-06-14 13:06:13 [main] INFO  o.f.core.internal.command.DbValidate - Successfully validated 15 migrations (execution time 00:00.043s)
2025-06-14 13:06:13 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 1.6.1
2025-06-14 13:06:13 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-06-14 13:06:13 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "1.7.1 - insert dummy data"
2025-06-14 13:06:13 [main] ERROR o.f.core.internal.command.DbMigrate - Migration of schema "public" to version "1.7.1 - insert dummy data" failed! Changes successfully rolled back.
2025-06-14 13:06:13 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "customers" violates foreign key constraint "customers_cate_tarif_id_fkey"
  Detail: Key (cate_tarif_id)=(1) is not present in table "cat_tarif".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 33
Statement  : Run Flyway with -X option to see the actual statement causing the problem

2025-06-14 13:06:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:06:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:06:13 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:06:13 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:06:13 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "customers" violates foreign key constraint "customers_cate_tarif_id_fkey"
  Detail: Key (cate_tarif_id)=(1) is not present in table "cat_tarif".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 33
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:328)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "customers" violates foreign key constraint "customers_cate_tarif_id_fkey"
  Detail: Key (cate_tarif_id)=(1) is not present in table "cat_tarif".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 33
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	... 10 common frames omitted
Caused by: org.flywaydb.core.internal.exception.FlywayMigrateException: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "customers" violates foreign key constraint "customers_cate_tarif_id_fkey"
  Detail: Key (cate_tarif_id)=(1) is not present in table "cat_tarif".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 33
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:399)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$applyMigrations$1(DbMigrate.java:283)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:59)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:282)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:255)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$migrateAll$0(DbMigrate.java:153)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:77)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.lambda$execute$0(PostgreSQLAdvisoryLockTemplate.java:60)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:59)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:60)
	at org.flywaydb.database.postgresql.PostgreSQLConnection.lock(PostgreSQLConnection.java:105)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:164)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:153)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:104)
	at org.flywaydb.core.Flyway.lambda$migrate$1(Flyway.java:247)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:210)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:188)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 17 common frames omitted
Caused by: org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: Script V1.7.1__insert_dummy_data.sql failed
-------------------------------------------
SQL State  : 23503
Error Code : 0
Message    : ERROR: insert or update on table "customers" violates foreign key constraint "customers_cate_tarif_id_fkey"
  Detail: Key (cate_tarif_id)=(1) is not present in table "cat_tarif".
Location   : db/migration/data/V1.7.1__insert_dummy_data.sql (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/db/migration/data/V1.7.1__insert_dummy_data.sql)
Line       : 33
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.handleException(DefaultSqlScriptExecutor.java:256)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:217)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.execute(DefaultSqlScriptExecutor.java:137)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.executeOnce(SqlMigrationExecutor.java:75)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.lambda$execute$0(SqlMigrationExecutor.java:66)
	at org.flywaydb.core.internal.database.DefaultExecutionStrategy.execute(DefaultExecutionStrategy.java:31)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:65)
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:391)
	... 36 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "customers" violates foreign key constraint "customers_cate_tarif_id_fkey"
  Detail: Key (cate_tarif_id)=(1) is not present in table "cat_tarif".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.flywaydb.core.internal.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:215)
	at org.flywaydb.core.internal.sqlscript.ParsedSqlStatement.execute(ParsedSqlStatement.java:88)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:212)
	... 42 common frames omitted
2025-06-14 13:08:20 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 256887 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:08:20 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:08:20 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:08:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:08:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:08:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 10 JPA repository interfaces.
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:08:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-06-14 13:08:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:08:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:08:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:08:21 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:08:21 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1831 ms
2025-06-14 13:08:22 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:08:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:08:22 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:08:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:08:22 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@718d6b7c
2025-06-14 13:08:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:08:22 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:08:22 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:08:22 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:08:24 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:08:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:08:24 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:08:24 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/CustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
2025-06-14 13:08:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:08:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:08:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:08:24 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:08:24 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:08:24 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/CustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'orders' of 'ma.foodplus.ordering.system.customer.model.Customer' [SELECT DISTINCT c FROM Customer c JOIN c.orders o JOIN o.items i WHERE i.productId = :productId]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 63 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'orders' of 'ma.foodplus.ordering.system.customer.model.Customer' [SELECT DISTINCT c FROM Customer c JOIN c.orders o JOIN o.items i WHERE i.productId = :productId]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'orders' of 'ma.foodplus.ordering.system.customer.model.Customer'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:193)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:271)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:107)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4789)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5289)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4519)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2280)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2224)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2037)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2016)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1248)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-06-14 13:10:49 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 259043 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:10:49 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:10:49 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 10 JPA repository interfaces.
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:10:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-06-14 13:10:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:10:51 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:10:51 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:10:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:10:51 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1561 ms
2025-06-14 13:10:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:10:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:10:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:10:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:10:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@718d6b7c
2025-06-14 13:10:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:10:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:10:51 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:10:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:10:52 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:52 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:10:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:10:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:10:53 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:10:53 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/CustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
2025-06-14 13:10:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:10:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:10:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:10:53 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:10:53 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:10:53 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/CustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByProductPreferences(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'orders' of 'ma.foodplus.ordering.system.customer.model.Customer' [SELECT DISTINCT c FROM Customer c JOIN c.orders o JOIN o.items i WHERE i.productId = :productId]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 63 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'orders' of 'ma.foodplus.ordering.system.customer.model.Customer' [SELECT DISTINCT c FROM Customer c JOIN c.orders o JOIN o.items i WHERE i.productId = :productId]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'orders' of 'ma.foodplus.ordering.system.customer.model.Customer'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:193)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:271)
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:107)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4789)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5289)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4519)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2280)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2224)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2037)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2016)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1248)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-06-14 13:11:34 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 259757 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:11:34 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:11:34 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:11:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:11:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 10 JPA repository interfaces.
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:11:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-06-14 13:11:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:11:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:11:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:11:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:11:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1687 ms
2025-06-14 13:11:36 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:11:36 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:11:36 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:11:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:11:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c02b3cb
2025-06-14 13:11:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:11:36 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:11:36 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:11:36 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:11:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:11:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:11:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:11:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:11:39 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/CustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long)
2025-06-14 13:11:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:11:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:11:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:11:39 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:11:39 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:11:39 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/CustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/CustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customerRepository' defined in ma.foodplus.ordering.system.customer.repository.CustomerRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.customer.repository.CustomerRepository.findByCategoryTarifId(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'cateTarif' of 'ma.foodplus.ordering.system.customer.model.Customer' [SELECT c FROM Customer c WHERE c.cateTarif.id = :categoryTarifId]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 63 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'cateTarif' of 'ma.foodplus.ordering.system.customer.model.Customer' [SELECT c FROM Customer c WHERE c.cateTarif.id = :categoryTarifId]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'cateTarif' of 'ma.foodplus.ordering.system.customer.model.Customer'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:198)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:198)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:92)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1891)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:8268)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:812)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7726)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2548)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2509)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6611)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2361)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:6302)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1259)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-06-14 13:12:29 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 260529 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:12:29 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:12:29 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:12:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:12:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:12:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 10 JPA repository interfaces.
2025-06-14 13:12:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:12:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:12:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-06-14 13:12:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:12:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:12:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:12:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:12:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2464 ms
2025-06-14 13:12:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:12:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:12:32 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:12:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:12:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@665b441e
2025-06-14 13:12:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:12:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:12:33 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:12:33 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:12:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:12:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:12:35 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:12:37 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productCustomerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/ProductCustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productCustomerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/ProductCustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'productCustomerValidationService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/ProductCustomerValidationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'productService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/product/service/ProductService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productRepository' defined in ma.foodplus.ordering.system.product.repository.ProductRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
2025-06-14 13:12:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:12:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:12:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:12:37 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:12:37 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:12:37 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productCustomerController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/controller/ProductCustomerController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productCustomerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/ProductCustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'productCustomerValidationService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/ProductCustomerValidationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'productService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/product/service/ProductService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productRepository' defined in ma.foodplus.ordering.system.product.repository.ProductRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productCustomerServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/impl/ProductCustomerServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'productCustomerValidationService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/ProductCustomerValidationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'productService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/product/service/ProductService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productRepository' defined in ma.foodplus.ordering.system.product.repository.ProductRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productCustomerValidationService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/customer/service/ProductCustomerValidationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'productService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/product/service/ProductService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productRepository' defined in ma.foodplus.ordering.system.product.repository.ProductRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/product/service/ProductService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productRepository' defined in ma.foodplus.ordering.system.product.repository.ProductRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 49 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productRepository' defined in ma.foodplus.ordering.system.product.repository.ProductRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 62 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); Reason: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 72 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List ma.foodplus.ordering.system.product.repository.ProductRepository.findByFamilyCode(java.lang.String); No property 'familyCode' found for type 'Product'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:128)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:260)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 84 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'familyCode' found for type 'Product'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 88 common frames omitted
2025-06-14 13:13:25 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 261327 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:13:25 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:13:25 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:13:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:13:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:13:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 98 ms. Found 10 JPA repository interfaces.
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 0 Redis repository interfaces.
2025-06-14 13:13:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:13:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:13:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:13:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:13:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2751 ms
2025-06-14 13:13:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:13:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:13:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:13:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:13:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6694fb1b
2025-06-14 13:13:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:13:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:13:29 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:13:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:13:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:13:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:13:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:13:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:13:32 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:13:34 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/controller/ProductStockController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems(); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems()
2025-06-14 13:13:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:13:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:13:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:13:34 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:13:34 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:13:34 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/controller/ProductStockController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems(); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems(); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems(); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems(); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems()
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findLowStockItems()
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'minimumQuantity' of 'ma.foodplus.ordering.system.inventory.model.ProductStock' [SELECT ps FROM ProductStock ps WHERE ps.quantity <= ps.minimumQuantity]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 63 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'minimumQuantity' of 'ma.foodplus.ordering.system.inventory.model.ProductStock' [SELECT ps FROM ProductStock ps WHERE ps.quantity <= ps.minimumQuantity]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'minimumQuantity' of 'ma.foodplus.ordering.system.inventory.model.ProductStock'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:198)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:198)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:92)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1891)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:8268)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:812)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7726)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2549)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2509)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6611)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2361)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:6302)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1259)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-06-14 13:15:37 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 263268 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:15:37 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:15:37 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:15:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:15:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:15:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 10 JPA repository interfaces.
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:15:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-06-14 13:15:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:15:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:15:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:15:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:15:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2231 ms
2025-06-14 13:15:40 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:15:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:15:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:15:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:15:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c02b3cb
2025-06-14 13:15:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:15:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:15:40 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:15:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:15:42 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:15:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:15:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:15:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:15:45 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/controller/ProductStockController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String)
2025-06-14 13:15:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:15:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:15:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:15:45 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:15:45 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:15:45 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/controller/ProductStockController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String); Reason: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findByStorageCondition(java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'storageCondition' of 'ma.foodplus.ordering.system.inventory.model.ProductStock' [SELECT ps FROM ProductStock ps WHERE ps.storageCondition = :condition]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 63 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'storageCondition' of 'ma.foodplus.ordering.system.inventory.model.ProductStock' [SELECT ps FROM ProductStock ps WHERE ps.storageCondition = :condition]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'storageCondition' of 'ma.foodplus.ordering.system.inventory.model.ProductStock'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:198)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:198)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:92)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1891)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:8268)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:812)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7726)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2548)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2509)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6611)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2361)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:6302)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1259)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-06-14 13:17:19 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 264601 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:17:19 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:17:19 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 10 JPA repository interfaces.
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-06-14 13:17:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:17:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:17:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:17:21 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:17:21 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1670 ms
2025-06-14 13:17:21 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:17:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:17:21 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:17:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:17:21 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59a3eaf7
2025-06-14 13:17:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:17:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:17:21 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:17:21 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:17:23 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:17:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:17:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:17:23 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:17:24 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/controller/ProductStockController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); Reason: Failed to create query for method public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); No property 'lastUpdated' found for type 'ProductStock'
2025-06-14 13:17:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:17:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:17:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:17:24 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:17:24 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:17:24 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/controller/ProductStockController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); Reason: Failed to create query for method public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); No property 'lastUpdated' found for type 'ProductStock'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at ma.foodplus.ordering.system.FoodPlusOrderingApplication.main(FoodPlusOrderingApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/inventory/service/impl/ProductStockServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); Reason: Failed to create query for method public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); No property 'lastUpdated' found for type 'ProductStock'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1740)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockRepository' defined in ma.foodplus.ordering.system.inventory.repository.ProductStockRepository defined in @EnableJpaRepositories declared on JpaConfig: Could not create query for public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); Reason: Failed to create query for method public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); No property 'lastUpdated' found for type 'ProductStock'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); Reason: Failed to create query for method public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); No property 'lastUpdated' found for type 'ProductStock'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract ma.foodplus.ordering.system.inventory.model.ProductStock ma.foodplus.ordering.system.inventory.repository.ProductStockRepository.findFirstByProductIdOrderByLastUpdatedDesc(java.lang.Long); No property 'lastUpdated' found for type 'ProductStock'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:128)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:260)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'lastUpdated' found for type 'ProductStock'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.OrderBySource.lambda$createOrder$2(OrderBySource.java:110)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.query.parser.OrderBySource.createOrder(OrderBySource.java:108)
	at org.springframework.data.repository.query.parser.OrderBySource.<init>(OrderBySource.java:92)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:392)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 61 common frames omitted
2025-06-14 13:18:15 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 265365 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:18:15 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:18:15 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108 ms. Found 10 JPA repository interfaces.
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:18:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-06-14 13:18:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:18:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:18:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:18:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:18:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1956 ms
2025-06-14 13:18:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:18:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:18:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:18:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:18:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c02b3cb
2025-06-14 13:18:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:18:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:18:18 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:18:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:18:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:18:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:18:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:18:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:18:21 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/order/controller/OrderController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'orderServiceImpl' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/order/service/impl/OrderServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'ma.foodplus.ordering.system.order.mapper.OrderMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-06-14 13:18:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:18:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:18:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:18:21 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:18:21 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:18:21 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in ma.foodplus.ordering.system.order.service.impl.OrderServiceImpl required a bean of type 'ma.foodplus.ordering.system.order.mapper.OrderMapper' that could not be found.


Action:

Consider defining a bean of type 'ma.foodplus.ordering.system.order.mapper.OrderMapper' in your configuration.

2025-06-14 13:20:16 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 266970 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:20:16 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:20:16 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 120 ms. Found 10 JPA repository interfaces.
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:20:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2025-06-14 13:20:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:20:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:20:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:20:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:20:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2509 ms
2025-06-14 13:20:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:20:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:20:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:20:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:20:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@342394b3
2025-06-14 13:20:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:20:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:20:19 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:20:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:20:21 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:20:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:20:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:20:21 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:20:23 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderPromotionController' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/order/controller/OrderPromotionController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'promotionApplicationService' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/promos/service/PromotionApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'advancedPromotionEngine' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/promos/service/AdvancedPromotionEngine.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'conditionEvaluator' defined in file [/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes/ma/foodplus/ordering/system/promos/service/ConditionEvaluator.class]: Unsatisfied dependency expressed through constructor parameter 2: No qualifying bean of type 'ma.foodplus.ordering.system.inventory.service.InventoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-06-14 13:20:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:20:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:20:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-14 13:20:23 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-14 13:20:23 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-14 13:20:23 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 2 of constructor in ma.foodplus.ordering.system.promos.service.ConditionEvaluator required a bean of type 'ma.foodplus.ordering.system.inventory.service.InventoryService' that could not be found.


Action:

Consider defining a bean of type 'ma.foodplus.ordering.system.inventory.service.InventoryService' in your configuration.

2025-06-14 13:21:26 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Starting FoodPlusOrderingApplication using Java 21.0.7 with PID 267938 (/home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system/nvp/target/classes started by louki in /home/louki/MY_LAP/Organizations/foodplus/foodplus-ordering-system)
2025-06-14 13:21:26 [main] DEBUG m.f.o.s.FoodPlusOrderingApplication - Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-14 13:21:26 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - The following 1 profile is active: "dev"
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 10 JPA repository interfaces.
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.common.repository.CategoryTarifRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerGroupRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.customer.repository.ProductCustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.DepotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.ProductStockRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.inventory.repository.SiteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ma.foodplus.ordering.system.promos.repository.PromotionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-14 13:21:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-06-14 13:21:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8087 (http)
2025-06-14 13:21:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-14 13:21:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-14 13:21:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-14 13:21:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1977 ms
2025-06-14 13:21:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-14 13:21:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-14 13:21:28 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-14 13:21:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-14 13:21:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e02f17d
2025-06-14 13:21:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-14 13:21:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-14 13:21:29 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-14 13:21:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-14 13:21:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists FKsaok720gsu4u2wrgbk10b5n8d
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKetr33gy3yxphaasg8pnk8wyvs
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       drop constraint if exists FKj7chtq65ntu6cwx5vtc3rngdp
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       drop constraint if exists FKdig1h8xu5vcu0rfcihvbh46wq
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       drop constraint if exists FK5qq91mnq7j5lemrap49cshimd
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       drop constraint if exists FK82i7jogqbstxwl46g1rywbwsu
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       drop constraint if exists FKbioxgbv59vetrxe0ejfubep1w
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKd112rx0alycddsms029iifrih
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       drop constraint if exists FKlda9rad6s180ha3dl1ncsp8n7
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       drop constraint if exists FKmcawg70vkgr4vfrsphtcoc8up
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       drop constraint if exists FK53ooveoh14cvs7qns24gmlehh
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FKnygquw0w0xvu9lfjpsbd6xmgv
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       drop constraint if exists FK4vdatfmkcw4aqwv41q569gq44
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       drop constraint if exists FKjfph2mn5x5inav2a7wsxo2r2l
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       drop constraint if exists FKjy33meus9wkfyyp29kyxhaw3i
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       drop constraint if exists FKtkdnuodmsbsskeejx4ksjgmsn
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       drop constraint if exists FKd2huyfw319bhk0frhvdh0v0ot
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       drop constraint if exists FKiamgbul5ugcmy9ewsemk31fng
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       drop constraint if exists FK1s1aelilqwce11lxgop8yhud0
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       drop constraint if exists FKc6jg561k2bcyoja0im2kifdgb
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       drop constraint if exists FK6xcgfd4fvmkpqdlnln3opdmpg
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FK3iar32tvya9o51dqhtaf95ev6
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       drop constraint if exists FKhw31w9eyoj371gg325124p1e9
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cat_tarif cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_group_members cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_groups cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists depots cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_item_applied_promotions cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_families cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_stocks cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products_customer cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_conditions cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_families cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_customer_usage cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_dynamic_conditions cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_categories cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_excluded_products cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_lines cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_rules cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotion_tiers cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists promotions cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists rewards cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists sites cascade
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table promotions (
        apply_first_matching_rule_only boolean,
        current_usage_count integer,
        index_discount integer,
        is_active boolean not null,
        is_exclusive boolean not null,
        max_usage_count integer,
        max_usage_per_customer integer,
        min_purchase_amount numeric(38,2),
        priority integer not null check (priority>=0),
        skip_to_sequence integer,
        end_date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        start_date timestamp(6) with time zone not null,
        combinability_group varchar(255),
        customer_group varchar(255),
        description varchar(255),
        name varchar(255) not null,
        promo_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    )
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code)
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards
2025-06-14 13:21:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules
2025-06-14 13:21:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:21:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-14 13:21:33 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-14 13:21:34 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoints beneath base path '/actuator'
2025-06-14 13:21:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8087 (http) with context path '/'
2025-06-14 13:21:34 [main] INFO  m.f.o.s.FoodPlusOrderingApplication - Started FoodPlusOrderingApplication in 8.568 seconds (process running for 8.913)
2025-06-14 13:21:34 [main] INFO  m.f.o.s.p.s.CacheWarmingService - Starting cache warm-up...
2025-06-14 13:21:34 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.additional_photos,
        p1_0.availability_schedule,
        p1_0.b2b_contract_discount_percentage,
        p1_0.b2b_contract_required,
        p1_0.b2b_credit_terms,
        p1_0.b2b_custom_pricing_enabled,
        p1_0.b2b_delivery_lead_time,
        p1_0.b2b_minimum_order_value,
        p1_0.b2b_payment_methods,
        p1_0.b2b_volume_discount_enabled,
        p1_0.b2c_display_in_catalog,
        p1_0.b2c_featured,
        p1_0.b2c_loyalty_points_multiplier,
        p1_0.b2c_promo_end_date,
        p1_0.b2c_promo_price,
        p1_0.b2c_promo_start_date,
        p1_0.b2c_rating,
        p1_0.b2c_retail_price,
        p1_0.b2c_review_count,
        p1_0.barcode,
        p1_0.bulk_discount_percentage,
        p1_0.bulk_discount_threshold,
        p1_0.bulk_package_size,
        p1_0.bulk_package_unit,
        p1_0.certification,
        p1_0.country_of_origin,
        p1_0.created_at,
        p1_0.custom_attributes,
        p1_0.customer_segments,
        p1_0.deliverable,
        p1_0.description,
        p1_0.dimensions,
        p1_0.inactive,
        p1_0.is_bulk_item,
        p1_0.is_perishable,
        p1_0.is_wholesale_only,
        p1_0.maximum_order_quantity,
        p1_0.minimum_order_quantity,
        p1_0.package_quantity,
        p1_0.package_size,
        p1_0.photo,
        p1_0.price_including_tax,
        p1_0.family_code,
        p1_0.promo_sku_points,
        p1_0.reference,
        p1_0.requires_approval,
        p1_0.requires_cold_storage,
        p1_0.requires_contract,
        p1_0.sale_price,
        p1_0.sale_unit,
        p1_0.seasonality,
        p1_0.sku,
        p1_0.stock_tracking,
        p1_0.supplier_code,
        p1_0.supplier_name,
        p1_0.target_market,
        p1_0.tax_rate,
        p1_0.title,
        p1_0.unit_price,
        p1_0.updated_at,
        p1_0.vendable,
        p1_0.visible,
        p1_0.weight,
        p1_0.weight_unit,
        p1_0.wholesale_discount_percentage,
        p1_0.wholesale_minimum_quantity,
        p1_0.wholesale_price,
        p1_0.wholesale_tier_1_price,
        p1_0.wholesale_tier_1_quantity,
        p1_0.wholesale_tier_2_price,
        p1_0.wholesale_tier_2_quantity,
        p1_0.wholesale_tier_3_price,
        p1_0.wholesale_tier_3_quantity 
    from
        products p1_0
2025-06-14 13:21:34 [main] INFO  m.f.o.s.p.s.CacheWarmingService - Warmed up all products cache
2025-06-14 13:21:34 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.additional_photos,
        p1_0.availability_schedule,
        p1_0.b2b_contract_discount_percentage,
        p1_0.b2b_contract_required,
        p1_0.b2b_credit_terms,
        p1_0.b2b_custom_pricing_enabled,
        p1_0.b2b_delivery_lead_time,
        p1_0.b2b_minimum_order_value,
        p1_0.b2b_payment_methods,
        p1_0.b2b_volume_discount_enabled,
        p1_0.b2c_display_in_catalog,
        p1_0.b2c_featured,
        p1_0.b2c_loyalty_points_multiplier,
        p1_0.b2c_promo_end_date,
        p1_0.b2c_promo_price,
        p1_0.b2c_promo_start_date,
        p1_0.b2c_rating,
        p1_0.b2c_retail_price,
        p1_0.b2c_review_count,
        p1_0.barcode,
        p1_0.bulk_discount_percentage,
        p1_0.bulk_discount_threshold,
        p1_0.bulk_package_size,
        p1_0.bulk_package_unit,
        p1_0.certification,
        p1_0.country_of_origin,
        p1_0.created_at,
        p1_0.custom_attributes,
        p1_0.customer_segments,
        p1_0.deliverable,
        p1_0.description,
        p1_0.dimensions,
        p1_0.inactive,
        p1_0.is_bulk_item,
        p1_0.is_perishable,
        p1_0.is_wholesale_only,
        p1_0.maximum_order_quantity,
        p1_0.minimum_order_quantity,
        p1_0.package_quantity,
        p1_0.package_size,
        p1_0.photo,
        p1_0.price_including_tax,
        p1_0.family_code,
        p1_0.promo_sku_points,
        p1_0.reference,
        p1_0.requires_approval,
        p1_0.requires_cold_storage,
        p1_0.requires_contract,
        p1_0.sale_price,
        p1_0.sale_unit,
        p1_0.seasonality,
        p1_0.sku,
        p1_0.stock_tracking,
        p1_0.supplier_code,
        p1_0.supplier_name,
        p1_0.target_market,
        p1_0.tax_rate,
        p1_0.title,
        p1_0.unit_price,
        p1_0.updated_at,
        p1_0.vendable,
        p1_0.visible,
        p1_0.weight,
        p1_0.weight_unit,
        p1_0.wholesale_discount_percentage,
        p1_0.wholesale_minimum_quantity,
        p1_0.wholesale_price,
        p1_0.wholesale_tier_1_price,
        p1_0.wholesale_tier_1_quantity,
        p1_0.wholesale_tier_2_price,
        p1_0.wholesale_tier_2_quantity,
        p1_0.wholesale_tier_3_price,
        p1_0.wholesale_tier_3_quantity 
    from
        products p1_0 
    where
        p1_0.deliverable
2025-06-14 13:21:34 [main] INFO  m.f.o.s.p.s.CacheWarmingService - Warmed up deliverable products cache
2025-06-14 13:21:34 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.additional_photos,
        p1_0.availability_schedule,
        p1_0.b2b_contract_discount_percentage,
        p1_0.b2b_contract_required,
        p1_0.b2b_credit_terms,
        p1_0.b2b_custom_pricing_enabled,
        p1_0.b2b_delivery_lead_time,
        p1_0.b2b_minimum_order_value,
        p1_0.b2b_payment_methods,
        p1_0.b2b_volume_discount_enabled,
        p1_0.b2c_display_in_catalog,
        p1_0.b2c_featured,
        p1_0.b2c_loyalty_points_multiplier,
        p1_0.b2c_promo_end_date,
        p1_0.b2c_promo_price,
        p1_0.b2c_promo_start_date,
        p1_0.b2c_rating,
        p1_0.b2c_retail_price,
        p1_0.b2c_review_count,
        p1_0.barcode,
        p1_0.bulk_discount_percentage,
        p1_0.bulk_discount_threshold,
        p1_0.bulk_package_size,
        p1_0.bulk_package_unit,
        p1_0.certification,
        p1_0.country_of_origin,
        p1_0.created_at,
        p1_0.custom_attributes,
        p1_0.customer_segments,
        p1_0.deliverable,
        p1_0.description,
        p1_0.dimensions,
        p1_0.inactive,
        p1_0.is_bulk_item,
        p1_0.is_perishable,
        p1_0.is_wholesale_only,
        p1_0.maximum_order_quantity,
        p1_0.minimum_order_quantity,
        p1_0.package_quantity,
        p1_0.package_size,
        p1_0.photo,
        p1_0.price_including_tax,
        p1_0.family_code,
        p1_0.promo_sku_points,
        p1_0.reference,
        p1_0.requires_approval,
        p1_0.requires_cold_storage,
        p1_0.requires_contract,
        p1_0.sale_price,
        p1_0.sale_unit,
        p1_0.seasonality,
        p1_0.sku,
        p1_0.stock_tracking,
        p1_0.supplier_code,
        p1_0.supplier_name,
        p1_0.target_market,
        p1_0.tax_rate,
        p1_0.title,
        p1_0.unit_price,
        p1_0.updated_at,
        p1_0.vendable,
        p1_0.visible,
        p1_0.weight,
        p1_0.weight_unit,
        p1_0.wholesale_discount_percentage,
        p1_0.wholesale_minimum_quantity,
        p1_0.wholesale_price,
        p1_0.wholesale_tier_1_price,
        p1_0.wholesale_tier_1_quantity,
        p1_0.wholesale_tier_2_price,
        p1_0.wholesale_tier_2_quantity,
        p1_0.wholesale_tier_3_price,
        p1_0.wholesale_tier_3_quantity 
    from
        products p1_0 
    where
        not(p1_0.inactive)
2025-06-14 13:21:34 [main] INFO  m.f.o.s.p.s.CacheWarmingService - Warmed up active products cache
2025-06-14 13:21:34 [main] INFO  m.f.o.s.p.s.CacheWarmingService - Cache warm-up completed
2025-06-14 13:29:22 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-14 13:29:22 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-14 13:29:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-14 13:29:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-14 13:29:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
