-- Create base tables
CREATE TABLE promotions (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    promo_code VARCHAR(50) UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    start_date TIMESTAMP WITH TIME ZONE,
    end_date TIMESTAMP WITH TIME ZONE,
    start_time VARCHAR(255),
    end_time VARCHAR(255),
    priority INTEGER DEFAULT 0,
    is_exclusive BOOLEAN DEFAULT false,
    combinability_group VARCHAR(50),
    min_purchase_amount DECIMAL(19,2),
    max_usage_count INTEGER,
    max_usage_per_customer INTEGER,
    current_usage_count INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT true,
    apply_first_matching_rule_only BOOLEAN DEFAULT false,
    customer_group VARCHAR(50),
    index_discount INTEGER,
    is_nested_promotion BOOLEAN DEFAULT false,
    parent_promotion_id BIGINT,
    nested_level INTEGER,
    skip_to_sequence INTEGER,
    time_restricted BOOLEAN DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE promo_families (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    type VARCHAR(20) NOT NULL,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE promo_family_members (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    family_id BIGINT NOT NULL REFERENCES promo_families(id),
    member_code VARCHAR(50) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(family_id, member_code)
);

CREATE TABLE promotion_product_points (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    promotion_id BIGINT NOT NULL REFERENCES promotions(id),
    product_id BIGINT NOT NULL,
    points INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(promotion_id, product_id)
);

-- Create indexes
CREATE INDEX idx_promotions_promo_code ON promotions(promo_code);
CREATE INDEX idx_promotions_start_date ON promotions(start_date);
CREATE INDEX idx_promotions_end_date ON promotions(end_date);
CREATE INDEX idx_promotions_active ON promotions(is_active);
CREATE INDEX idx_promo_families_code ON promo_families(code);
CREATE INDEX idx_promo_families_type ON promo_families(type);
CREATE INDEX idx_promo_families_active ON promo_families(is_active);
CREATE INDEX idx_promo_family_members_family_id ON promo_family_members(family_id);
CREATE INDEX idx_promo_family_members_member_code ON promo_family_members(member_code);
CREATE INDEX idx_promotion_product_points_promotion_id ON promotion_product_points(promotion_id);
CREATE INDEX idx_promotion_product_points_product_id ON promotion_product_points(product_id);

    create table cat_tarif (
        price_ttc numeric(24,6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        description varchar(255) not null,
        primary key (id)
    );

    create table categories (
        is_active boolean not null,
        level integer not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        parent_id bigint,
        updated_at timestamp(6) with time zone,
        description varchar(500),
        code varchar(255) not null unique,
        name varchar(255) not null,
        primary key (id)
    );

    create table customer_group_members (
        customer_id bigint not null,
        group_id bigint not null,
        primary key (customer_id, group_id)
    );

    create table customer_groups (
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    );

    create table customers (
        annual_turnover numeric(38,2),
        average_order_value numeric(24,6),
        credit_limit numeric(24,6),
        credit_score integer,
        is_active boolean not null,
        is_vip boolean,
        loyalty_points integer,
        number_of_employees integer,
        outstanding_balance numeric(24,6),
        payment_term_days integer,
        total_orders integer,
        total_spent numeric(24,6),
        category_tarif_id bigint,
        contract_end_date timestamp(6) with time zone,
        contract_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_since timestamp(6) with time zone,
        id bigint generated by default as identity,
        last_activity_date timestamp(6) with time zone,
        last_order_date timestamp(6) with time zone,
        last_payment_date timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        address varchar(255),
        bank_account_info TEXT,
        business_activity varchar(255),
        city varchar(255),
        company_name varchar(255),
        contract_number varchar(255),
        contract_terms TEXT,
        contract_type varchar(255),
        country varchar(255),
        created_by varchar(255),
        credit_rating varchar(255),
        ct_num varchar(255) not null unique,
        customer_type varchar(255) not null check (customer_type in ('B2B','B2C')),
        delivery_terms TEXT,
        description varchar(255) not null,
        email varchar(255),
        ice varchar(255) not null,
        legal_form varchar(255),
        notes TEXT,
        payment_history TEXT,
        payment_terms TEXT,
        postal_code varchar(255),
        preferred_delivery_days varchar(255),
        preferred_delivery_time varchar(255),
        preferred_payment_method varchar(255),
        region varchar(255),
        registration_number varchar(255),
        special_conditions TEXT,
        special_handling_instructions TEXT,
        tax_id varchar(255),
        telecopie varchar(255),
        telephone varchar(255),
        updated_by varchar(255),
        vat_number varchar(255),
        primary key (id)
    );

    create table depots (
        capacity_cubic_meters float(53),
        is_active boolean,
        is_refrigerated boolean,
        security_level integer,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        site_id bigint,
        updated_at timestamp(6) with time zone,
        access_restrictions varchar(255),
        depot_code varchar(255) not null unique,
        depot_type varchar(255) check (depot_type in ('MAIN_WAREHOUSE','DISTRIBUTION_CENTER','COLD_STORAGE','DRY_STORAGE','HAZARDOUS_MATERIALS','TEMPORARY_STORAGE','CROSS_DOCKING')),
        description varchar(255) not null,
        handling_equipment varchar(255),
        special_requirements TEXT,
        temperature_range varchar(255),
        primary key (id)
    );

    create table order_item_applied_promotions (
        order_item_id bigint not null,
        promotion_code varchar(255)
    );

    create table order_items (
        bulk_quantity_threshold integer,
        consumed_quantity integer not null,
        discount_amount numeric(38,2) not null,
        quantity integer not null,
        sku_points numeric(38,2),
        special_pricing boolean,
        tax_amount numeric(38,2) not null,
        total_price numeric(38,2) not null,
        unit_price numeric(38,2) not null,
        wholesale_price numeric(38,2),
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_family_id bigint,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        applied_promotion_code varchar(255),
        notes varchar(255),
        product_name varchar(255) not null,
        sku varchar(255),
        primary key (id)
    );

    create table orders (
        bulk_discount_percentage numeric(38,2),
        is_wholesale boolean not null,
        minimum_order_value numeric(38,2),
        shipping_cost numeric(38,2) not null,
        special_pricing_agreement boolean,
        subtotal numeric(38,2) not null,
        total numeric(38,2) not null,
        total_discount numeric(38,2) not null,
        total_tax numeric(38,2) not null,
        cancelled_at timestamp(6) with time zone,
        created_at timestamp(6) with time zone not null,
        customer_id bigint not null,
        delivered_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        payment_due_date timestamp(6) with time zone,
        preferred_delivery_date timestamp(6) with time zone,
        refunded_at timestamp(6) with time zone,
        updated_at timestamp(6) with time zone,
        cancellation_reason varchar(255),
        contract_number varchar(255),
        created_by varchar(255),
        delivery_instructions varchar(255),
        internal_notes varchar(255),
        notes varchar(255),
        order_number varchar(255) not null unique,
        order_type varchar(255) not null check (order_type in ('B2B','B2C')),
        payment_method varchar(255) check (payment_method in ('CASH','CREDIT_CARD','DEBIT_CARD','MOBILE_PAYMENT','BANK_TRANSFER','CHECK','WIRE_TRANSFER','CREDIT_NOTE','LETTER_OF_CREDIT')),
        payment_notes varchar(255),
        payment_reference varchar(255),
        payment_status varchar(255) check (payment_status in ('PENDING','PARTIALLY_PAID','PAID','FAILED','REFUNDED','CANCELLED','ON_HOLD','IN_DISPUTE')),
        payment_terms varchar(255),
        po_number varchar(255),
        reference_number varchar(255),
        refund_reason varchar(255),
        shipping_address varchar(255),
        shipping_city varchar(255),
        shipping_country varchar(255),
        shipping_notes varchar(255),
        shipping_postal_code varchar(255),
        status varchar(255) not null check (status in ('DRAFT','PENDING','CONFIRMED','PREPARING','READY','DELIVERING','DELIVERED','CANCELLED','REFUNDED')),
        updated_by varchar(255),
        primary key (id)
    );

    create table product_categories (
        category_id bigint not null,
        product_id bigint not null
    );

    create table product_families (
        is_active boolean not null,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        code varchar(255) not null unique,
        description varchar(255),
        name varchar(255) not null,
        primary key (id)
    );

    create table product_stocks (
        days_of_stock integer,
        expiry_date date,
        max_stock_level numeric(24,6),
        min_stock_level numeric(24,6),
        quantity numeric(24,6) not null,
        reorder_point numeric(24,6),
        reorder_quantity numeric(24,6),
        reserved_quantity numeric(24,6) not null,
        shelf_life_days integer,
        unit_cost numeric(24,6) not null,
        created_at timestamp(6) with time zone not null,
        depot_id bigint not null,
        id bigint generated by default as identity,
        last_purchase_date timestamp(6) with time zone,
        last_sale_date timestamp(6) with time zone,
        product_id bigint not null,
        updated_at timestamp(6) with time zone,
        storage_conditions varchar(100),
        notes varchar(500),
        quality_notes varchar(1000),
        batch_number varchar(255),
        depot_name varchar(255),
        location_code varchar(255),
        product_name varchar(255),
        quality_status varchar(255) not null check (quality_status in ('INSPECTED','INSPECTION_REQUIRED','QUARANTINED','DAMAGED','RECALLED')),
        primary key (id)
    );

    create table products (
        b2b_contract_discount_percentage numeric(5,2),
        b2b_contract_required boolean,
        b2b_credit_terms integer,
        b2b_custom_pricing_enabled boolean,
        b2b_delivery_lead_time integer,
        b2b_minimum_order_value numeric(19,2),
        b2b_volume_discount_enabled boolean,
        b2c_display_in_catalog boolean,
        b2c_featured boolean,
        b2c_loyalty_points_multiplier numeric(5,2),
        b2c_promo_price numeric(19,2),
        b2c_rating numeric(3,2),
        b2c_retail_price numeric(19,2),
        b2c_review_count integer,
        bulk_discount_percentage numeric(5,2),
        bulk_discount_threshold integer,
        bulk_package_size integer,
        deliverable boolean not null,
        inactive boolean not null,
        is_bulk_item boolean not null,
        is_perishable boolean not null,
        is_wholesale_only boolean not null,
        maximum_order_quantity integer,
        minimum_order_quantity integer,
        package_quantity integer,
        price_including_tax numeric(10,2) not null,
        promo_sku_points numeric(10,2) not null,
        requires_approval boolean not null,
        requires_cold_storage boolean not null,
        requires_contract boolean not null,
        sale_price numeric(10,2) not null,
        tax_rate numeric(5,2),
        unit_price numeric(38,2) not null,
        vendable boolean not null,
        visible boolean not null,
        weight numeric(10,3),
        wholesale_discount_percentage numeric(5,2),
        wholesale_minimum_quantity integer,
        wholesale_price numeric(10,2),
        wholesale_tier_1_price numeric(10,2),
        wholesale_tier_1_quantity integer,
        wholesale_tier_2_price numeric(10,2),
        wholesale_tier_2_quantity integer,
        wholesale_tier_3_price numeric(10,2),
        wholesale_tier_3_quantity integer,
        b2c_promo_end_date timestamp(6) with time zone,
        b2c_promo_start_date timestamp(6) with time zone,
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        weight_unit varchar(10),
        bulk_package_unit varchar(20),
        stock_tracking varchar(20) not null check (stock_tracking in ('Aucun','SERIALIZED','CMUP','FIFO','LIFO','PAR_LOT')),
        barcode varchar(36) unique,
        dimensions varchar(50),
        package_size varchar(50),
        sale_unit varchar(50),
        seasonality varchar(50),
        supplier_code varchar(50),
        target_market varchar(50),
        country_of_origin varchar(100),
        supplier_name varchar(100),
        certification varchar(200),
        photo varchar(500),
        title varchar(500) not null,
        availability_schedule jsonb,
        b2b_payment_methods varchar(255),
        custom_attributes jsonb,
        customer_segments varchar(255),
        description TEXT not null,
        family_code varchar(255),
        reference varchar(255) not null unique,
        sku varchar(255) not null unique,
        additional_photos TEXT[],
        primary key (id)
    );

    create table products_customer (
        coef numeric(12,2),
        is_active boolean,
        prix_ttc numeric(16,6) not null,
        prix_ven_nouv numeric(16,6),
        qte_mont integer,
        remise numeric(16,6),
        remise_nouv numeric(16,6),
        created_at timestamp(6) with time zone,
        id bigint generated by default as identity,
        reference_customer bigint not null,
        reference_product bigint not null,
        updated_at timestamp(6) with time zone,
        category varchar(50),
        primary key (id)
    );

    create table promotion_conditions (
        required_loyalty_level integer,
        customer_group_id bigint,
        id bigint generated by default as identity,
        rule_id bigint,
        attribute varchar(255) not null,
        condition_type varchar(255) not null check (condition_type in ('CART_SUBTOTAL','PRODUCT_IN_CART','CUSTOMER_IN_GROUP','TIME_OF_DAY','DAY_OF_WEEK','CUSTOMER_LOYALTY_LEVEL','PAYMENT_METHOD')),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null check (operator in ('EQUAL','NOT_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','CONTAINS','NOT_CONTAINS','IN','NOT_IN')),
        payment_method varchar(255),
        value varchar(255) not null,
        primary key (id)
    );

    create table promotion_customer_families (
        end_date timestamp(6) with time zone,
        id bigint generated by default as identity,
        promotion_id bigint,
        start_date timestamp(6) with time zone,
        customer_family_code varchar(255) not null,
        primary key (id)
    );

    create table promotion_customer_usage (
        usage_count integer,
        customer_id bigint not null,
        promotion_id bigint not null,
        primary key (customer_id, promotion_id)
    );

    create table promotion_dynamic_conditions (
        is_active boolean not null,
        threshold float(53),
        id bigint generated by default as identity,
        promotion_id bigint,
        condition_type varchar(255) not null,
        condition_value varchar(255) not null,
        description varchar(255),
        entity_id varchar(255),
        entity_type varchar(255),
        operator varchar(255) not null,
        primary key (id)
    );

    create table promotion_excluded_categories (
        category_id bigint,
        promotion_id bigint not null
    );

    create table promotion_excluded_products (
        product_id bigint,
        promotion_id bigint not null
    );

    create table promotion_lines (
        free_product_id bigint,
        id bigint generated by default as identity,
        paid_product_id bigint,
        promotion_id bigint,
        free_family_code varchar(255),
        paid_family_code varchar(255),
        primary key (id)
    );

    create table promotion_rules (
        repetition integer,
        id bigint generated by default as identity,
        promotion_id bigint,
        breakpoint_type varchar(255) not null check (breakpoint_type in ('AMOUNT','QUANTITY','SKU_POINTS')),
        calculation_method varchar(255) not null check (calculation_method in ('BRACKET','CUMULATIVE')),
        condition_logic varchar(255) not null check (condition_logic in ('ALL','ANY')),
        name varchar(255) not null,
        primary key (id)
    );

    create table promotion_tiers (
        minimum_threshold numeric(38,2) not null,
        id bigint generated by default as identity,
        reward_id bigint not null unique,
        rule_id bigint,
        primary key (id)
    );

    create table rewards (
        value numeric(38,2) not null,
        id bigint generated by default as identity,
        target_entity_id bigint,
        reward_type varchar(255) not null check (reward_type in ('PERCENT_DISCOUNT_ON_ITEM','FIXED_DISCOUNT_ON_CART','FREE_PRODUCT')),
        target_entity_type varchar(255),
        category_id varchar(255),
        description varchar(255) not null,
        family_code varchar(255),
        is_active boolean default true,
        is_percentage boolean default false,
        product_id varchar(255),
        quantity integer,
        promotion_id bigint,
        primary key (id)
    );

    create table sites (
        capacity_sqm float(53),
        is_active boolean,
        created_at timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) with time zone,
        address_line1 varchar(255),
        city varchar(255),
        contact_email varchar(255),
        contact_phone varchar(255),
        country varchar(255),
        description varchar(255) not null,
        postal_code varchar(255),
        site_code varchar(255) not null unique,
        primary key (id)
    );

    alter table if exists categories 
       add constraint FKsaok720gsu4u2wrgbk10b5n8d 
       foreign key (parent_id) 
       references categories;

    alter table if exists customer_group_members 
       add constraint FKetr33gy3yxphaasg8pnk8wyvs 
       foreign key (group_id) 
       references customer_groups;

    alter table if exists customer_group_members 
       add constraint FKj7chtq65ntu6cwx5vtc3rngdp 
       foreign key (customer_id) 
       references customers;

    alter table if exists customers 
       add constraint FKdig1h8xu5vcu0rfcihvbh46wq 
       foreign key (category_tarif_id) 
       references cat_tarif;

    alter table if exists depots 
       add constraint FK5qq91mnq7j5lemrap49cshimd 
       foreign key (site_id) 
       references sites;

    alter table if exists order_item_applied_promotions 
       add constraint FK82i7jogqbstxwl46g1rywbwsu 
       foreign key (order_item_id) 
       references order_items;

    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders;

    alter table if exists product_categories 
       add constraint FKd112rx0alycddsms029iifrih 
       foreign key (category_id) 
       references categories;

    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products;

    alter table if exists product_stocks 
       add constraint FKmcawg70vkgr4vfrsphtcoc8up 
       foreign key (depot_id) 
       references depots;

    alter table if exists products 
       add constraint FK53ooveoh14cvs7qns24gmlehh 
       foreign key (family_code) 
       references product_families (code);

    alter table if exists products_customer 
       add constraint FKnygquw0w0xvu9lfjpsbd6xmgv 
       foreign key (reference_customer) 
       references customers;

    alter table if exists products_customer 
       add constraint FK4vdatfmkcw4aqwv41q569gq44 
       foreign key (reference_product) 
       references products;

    alter table if exists promotion_conditions 
       add constraint FKjfph2mn5x5inav2a7wsxo2r2l 
       foreign key (rule_id) 
       references promotion_rules;

    alter table if exists promotion_customer_families 
       add constraint FKjy33meus9wkfyyp29kyxhaw3i 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_customer_usage 
       add constraint FKtkdnuodmsbsskeejx4ksjgmsn 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_dynamic_conditions 
       add constraint FKd2huyfw319bhk0frhvdh0v0ot 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_excluded_categories 
       add constraint FKiamgbul5ugcmy9ewsemk31fng 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_excluded_products 
       add constraint FK1s1aelilqwce11lxgop8yhud0 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_lines 
       add constraint FKc6jg561k2bcyoja0im2kifdgb 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_rules 
       add constraint FK6xcgfd4fvmkpqdlnln3opdmpg 
       foreign key (promotion_id) 
       references promotions;

    alter table if exists promotion_tiers 
       add constraint FK3iar32tvya9o51dqhtaf95ev6 
       foreign key (reward_id) 
       references rewards;

    alter table if exists promotion_tiers 
       add constraint FKhw31w9eyoj371gg325124p1e9 
       foreign key (rule_id) 
       references promotion_rules;

    alter table if exists rewards 
       add constraint FK_rewards_promotion 
       foreign key (promotion_id) 
       references promotions;
